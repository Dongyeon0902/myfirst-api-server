apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: deploy-pipeline-secret
  namespace: skala-tekton
spec:
  params:
    - name: git-url
      type: string
      description: "Git repository URL"
    - name: git-revision
      type: string
      default: "main"
      description: "Git branch to checkout"
    - name: image-registry
      type: string
      description: "Docker image registry"
    - name: image-name
      type: string
      description: "Docker image name"
    - name: image-tag
      type: string
      default: "latest"
      description: "Docker image tag"
  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: maven-local-repo
    - name: kubeconfig-dir
    - name: basic-auth     # Secret이 마운트될 workspace
    - name: git-auth       # 생성된 git 인증 파일을 저장할 workspace
    - name: dockerconfig
    - name: kaniko-docker-config # dockerconfig secret을 mount할 workspace
  tasks:
    - name: prepare-git-auth
      taskRef:
        name: git-auth-prepare
      workspaces:
        - name: credentials
          workspace: basic-auth
        - name: git-auth
          workspace: git-auth

    - name: git-clone
      taskRef:
        name: git-clone
        kind: Task
      runAfter:
        - prepare-git-auth
      params:
        - name: url
          value: "$(params.git-url)"
        - name: revision
          value: "$(params.git-revision)"
      workspaces:
        - name: output
          workspace: shared-workspace
        - name: basic-auth
          workspace: git-auth

    - name: maven-build
      taskRef:
        name: maven
        kind: Task
      runAfter:
        - git-clone
      params:
        - name: GOALS
          value:
            - "clean"
            - "package"
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: maven-settings
          workspace: maven-settings
        - name: maven-local-repo
          workspace: maven-local-repo

    - name: prepare-docker-auth
      taskRef:
        name: prepare-docker-auth
      runAfter:
        - maven-build
      workspaces:
        - name: docker-secret
          workspace: dockerconfig
        - name: kaniko-docker-config
          workspace: kaniko-docker-config

    - name: kaniko-build-push
      taskRef:
        name: kaniko
        kind: Task
      runAfter:
        - prepare-docker-auth
      params:
        - name: DOCKERFILE
          value: "Dockerfile"
        - name: IMAGE
          value: "$(params.image-registry)/$(params.image-name):$(params.image-tag)"
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: dockerconfig
          workspace: kaniko-docker-config
